#!/usr/bin/env python
# -*- coding: utf-8 -*-

# Escrito por Daniel Fuentes B.
# Licencia: X11/MIT license http://www.opensource.org/licenses/mit-license.php
# https://www.pythonmania.net/es/2010/03/25/tutorial-pygame-2-ventana-e-imagenes/

# ---------------------------
# Importacion de los m√≥dulos
# ---------------------------

import pygame
from pygame.locals import *
import sys
import numpy as np

# -----------
# Constantes
# -----------

SCREEN_WIDTH = 640
SCREEN_HEIGHT = 480

# ------------------------------
# Clases y Funciones utilizadas
# ------------------------------


# ------------------------------
# Funcion principal del juego
# ------------------------------

line_color = (255, 0, 0)

def main():
    pygame.init()
    # creamos la ventana y le indicamos un titulo:
    screen = pygame.display.set_mode((SCREEN_WIDTH, SCREEN_HEIGHT))
    pygame.display.set_caption("tutorial pygame parte 2")

    # cargamos el fondo y una imagen (se crea objetos "Surface")
    fondo = pygame.image.load("fondo.png").convert()
    print(dir(fondo))
    print(type(fondo))
    dd = pygame.surfarray.array3d(fondo)
    print(type(dd))
    print(dd.shape)
    Z = 255*np.ones((640, 480,3))
    fondo = pygame.surfarray.make_surface(Z)
    tux = pygame.image.load("tux3.png").convert_alpha()

    # Indicamos la posicion de las "Surface" sobre la ventana
    screen.blit(fondo, (0, 0))
    a = 250.
    b = 180.
    x0 = 300.
    y0 = 220.

    xx = []
    yy = []

    teta = np.linspace(0, 2*np.pi, 5)    # 38
    for te in teta:
      print(te)
      x = x0 + a*np.cos(te)
      y = y0 + b*np.sin(te)
      xx.append(x)
      yy.append(y)
      screen.blit(tux, (x, y))

    np1 = len(xx)
    print(np1)

''' 
   
    for i in np.arange(np1):
      x0 = xx[i]
      if x0 < 320:
        x0 = x0+40
      y0 = yy[i]
      for j in np.arange(i+1,np1):
        print((i,j))
        x2 = xx[j]
        if xx[j] < 320:
          x2 = x2 +20
        pygame.draw.line(screen,line_color, (x0, y0), (x2, yy[j]))
'''     

    pygame.display.flip()

    # el bucle principal del juego
    while True:
        # Posibles entradas del teclado y mouse
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                sys.exit()

if __name__ == "__main__":
    main()

